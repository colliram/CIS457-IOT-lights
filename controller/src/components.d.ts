/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  IconKind,
  IconSize,
} from './components/icon/icon-storage';
import {
  Shape,
} from './components/toggle-switch/toggle-switch';

export namespace Components {
  interface AppRoot {}
  interface HeadBanner {
    'dirty': boolean;
    'locked': boolean;
  }
  interface IconInlay {
    'clickEvent'?: () => void;
    'kind': IconKind;
    'size'?: IconSize;
  }
  interface LightsView {}
  interface NavPanel {}
  interface RangeSlider {}
  interface ToggleSwitch {
    'clickEvent'?: () => void;
    'param': string;
    'shape': Shape;
    'state': boolean;
  }
}

declare global {


  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLHeadBannerElement extends Components.HeadBanner, HTMLStencilElement {}
  var HTMLHeadBannerElement: {
    prototype: HTMLHeadBannerElement;
    new (): HTMLHeadBannerElement;
  };

  interface HTMLIconInlayElement extends Components.IconInlay, HTMLStencilElement {}
  var HTMLIconInlayElement: {
    prototype: HTMLIconInlayElement;
    new (): HTMLIconInlayElement;
  };

  interface HTMLLightsViewElement extends Components.LightsView, HTMLStencilElement {}
  var HTMLLightsViewElement: {
    prototype: HTMLLightsViewElement;
    new (): HTMLLightsViewElement;
  };

  interface HTMLNavPanelElement extends Components.NavPanel, HTMLStencilElement {}
  var HTMLNavPanelElement: {
    prototype: HTMLNavPanelElement;
    new (): HTMLNavPanelElement;
  };

  interface HTMLRangeSliderElement extends Components.RangeSlider, HTMLStencilElement {}
  var HTMLRangeSliderElement: {
    prototype: HTMLRangeSliderElement;
    new (): HTMLRangeSliderElement;
  };

  interface HTMLToggleSwitchElement extends Components.ToggleSwitch, HTMLStencilElement {}
  var HTMLToggleSwitchElement: {
    prototype: HTMLToggleSwitchElement;
    new (): HTMLToggleSwitchElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'head-banner': HTMLHeadBannerElement;
    'icon-inlay': HTMLIconInlayElement;
    'lights-view': HTMLLightsViewElement;
    'nav-panel': HTMLNavPanelElement;
    'range-slider': HTMLRangeSliderElement;
    'toggle-switch': HTMLToggleSwitchElement;
  }
}

declare namespace LocalJSX {
  interface AppRoot extends JSXBase.HTMLAttributes<HTMLAppRootElement> {}
  interface HeadBanner extends JSXBase.HTMLAttributes<HTMLHeadBannerElement> {
    'dirty': boolean;
    'locked': boolean;
  }
  interface IconInlay extends JSXBase.HTMLAttributes<HTMLIconInlayElement> {
    'clickEvent'?: () => void;
    'kind': IconKind;
    'size'?: IconSize;
  }
  interface LightsView extends JSXBase.HTMLAttributes<HTMLLightsViewElement> {
    'onValues'?: (event: CustomEvent<any>) => void;
  }
  interface NavPanel extends JSXBase.HTMLAttributes<HTMLNavPanelElement> {
    'onClicked'?: (event: CustomEvent<any>) => void;
  }
  interface RangeSlider extends JSXBase.HTMLAttributes<HTMLRangeSliderElement> {}
  interface ToggleSwitch extends JSXBase.HTMLAttributes<HTMLToggleSwitchElement> {
    'clickEvent'?: () => void;
    'param': string;
    'shape': Shape;
    'state': boolean;
  }

  interface IntrinsicElements {
    'app-root': AppRoot;
    'head-banner': HeadBanner;
    'icon-inlay': IconInlay;
    'lights-view': LightsView;
    'nav-panel': NavPanel;
    'range-slider': RangeSlider;
    'toggle-switch': ToggleSwitch;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


